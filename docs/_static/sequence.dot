digraph "Sherpa AI Query Flow" {
    graph [fontname="Helvetica", fontsize=14, rankdir=TB, splines=line, nodesep=0.8, ranksep=0.8];
    node [fontname="Helvetica", fontsize=12, shape=box, style="filled,rounded", fillcolor="#f5f5f5", color="#336790", margin=0.3];
    edge [fontname="Helvetica", fontsize=10, color="#555555"];

    /* Participants */
    User [fillcolor="#f8f9f9", label="User"];
    Orchestrator [fillcolor="#d4e6f1", label="Orchestrator"];
    Agent [fillcolor="#d5f5e3", label="QA Agent"];
    Policy [fillcolor="#fdebd0", label="React Policy"];
    Memory [fillcolor="#ebdef0", label="Memory"];
    Model [fillcolor="#fadbd8", label="LLM"];
    Action [fillcolor="#f9e79f", label="Search Action"];
    
    /* Invisible edges for layout */
    edge [style=invis];
    User -> Orchestrator -> Agent -> Policy -> Memory -> Model -> Action;
    
    /* Sequence edges */
    edge [style=solid, color="#555555", constraint=false];
    
    User -> Orchestrator [label="1. Query", constraint=false];
    Orchestrator -> Agent [label="2. Process Query", constraint=false];
    Agent -> Memory [label="3. Check Memory", constraint=false];
    Memory -> Agent [label="4. Return Context", constraint=false];
    Agent -> Policy [label="5. Apply Policy", constraint=false];
    Policy -> Action [label="6. Select Action", constraint=false];
    Action -> Model [label="7. Get Result", constraint=false];
    Model -> Agent [label="8. Generate Response", constraint=false];
    Agent -> Orchestrator [label="9. Return Result", constraint=false];
    Orchestrator -> User [label="10. Final Answer", constraint=false];
    
    /* Rankings for proper sequence layout */
    { rank=same; User; }
    { rank=same; Orchestrator; }
    { rank=same; Agent; }
    { rank=same; Policy; Memory; }
    { rank=same; Model; Action; }
} 